import sys

import requests

from cloudevents.conversion import to_binary, to_structured
from cloudevents.http import CloudEvent

{% for group_key in groups.keys() -%}
{%- set group = groups[group_key] -%}
{%- set parts = group.id.split('.') -%}
{%- set groupName = parts | join('_') | lower %}

class {{ groupName.split('.')[-1]}}_event_producer:
    def __init__(self, url, content_mode = 'structured'):
        self.url = url
        self.content_mode = content_mode

    {% for id in group.definitions -%}
    {%- set definition = group.definitions[id] -%}
    {%- set parts = definition.id.split('.') -%}
    {%- set definitionName = parts|join('_')|lower %}
    def send_{{definitionName.split('.')[-1]}}(self,
    {%- for attrname in definition.metadata.attributes -%}
    {%- set attribute = definition.metadata.attributes[attrname] -%}
        {%- if attribute.type == "uritemplate" -%}
            {%- for placeholder in attribute.value | regex_search('\{([A-Za-z0-9_]+)\}') -%}
                {{ placeholder }}: str,
            {%- endfor -%}
        {%- elif attribute.value is not defined -%}
            {{ attrname }}: str {%- if not attribute.required -%} = default {% endif %},
        {%- endif -%}
    {%- endfor -%} data: object) -> None:
        attributes = {
        {%- for attrname in definition.metadata.attributes -%}
        {%- set attribute = definition.metadata.attributes[attrname] %}
            "{{ attrname }}": 
            {%- if attribute.value -%}
            "{{ attribute.value }}"
            {%- if attribute.type == "uritemplate" -%}
                .format(
                {%- for placeholder in attribute.value | regex_search('\{([A-Za-z0-9_]+)\}') -%}
                    {{ placeholder }}= {{ placeholder }}
                {%- if not loop.last -%},{%- endif%}
                {%- endfor -%}
                )           
            {%- endif %}
            {%- else -%}
              {{ attrname }}
            {%- endif-%}
            {%- if not loop.last -%},{%- endif%}
         {%- endfor %}
        }
        event = CloudEvent(attributes, data)
        if self.content_mode == "structured":
           headers, body = to_structured(event)
        else:
           headers, body = to_binary(event)
        requests.post(self.url, headers=headers, data=body)
{% endfor %}
{% endfor %}
